有意思的：链表翻转[递归和迭代两种]
删除链表中的一个节点：并不知道前置节点是什么，将后一个节点的值赋给前一个节点，然后删掉下一个节点
链表是否有环：使用快慢指针判断
复制随机链表：两种方法：HashMap<Node,Node> 原始的节点是key,现在的节点是value，然后复制链表的random 节点
    另一种方法： 将新创建的链表节点接在原来的链表节点后面，原来的是，A-B-C ,变为A-A'-B-B'-C-C'
    然后复制random节点，A'->random = A->random->next
    再将链表分离为 A-B-C/A'-B'-C'
回文链表：利用快慢指针，找到链表的中点，然后将中点后的链表，right 进行翻转，然后跟链表的前半部分left 一一比较。
链表排序：利用归并排序【1.利用递归】
【2.利用自底向上，将链表切割成1 1 1 1 1 1，然后归并成 2 2 2，然后归并成 4 2， 然后归并成6】
函数：如何cut链表，cut(current,step)  将当前链表切割成step个Node和剩下的链表，返回剩下的链表的头结点
